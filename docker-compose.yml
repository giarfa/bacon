volumes:
  db_storage:
  n8n_storage:

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB_N8N}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB_N8N}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - "GENERIC_TIMEZONE=Europe/Rome"
      - "N8N_SECURE_COOKIE=false"
    ports:
      - "5678:5678"
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8888:8080

  appsmith:
     image: index.docker.io/appsmith/appsmith-ee
     ports:
         - "80:80"
     volumes:
         - ./stacks:/appsmith-stacks
     restart: unless-stopped

  mqttx:
    image: emqx/mqttx-web:latest
    restart: always
    ports:
      - "8080:80"